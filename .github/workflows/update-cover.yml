name: Update Random Cover

on:
  schedule:
    - cron: "*/5 * * * *"   # every 5 min
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-cover:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Pick next shuffled file
        id: random
        run: |
          echo "üîç Searching in Covers/GIF, Covers/PNG, Covers/JPG..."
          files=()
          files+=($(find Covers/GIF -type f -iname "*.gif"))
          files+=($(find Covers/PNG -type f -iname "*.png"))
          files+=($(find Covers/JPG -type f -iname "*.jpg"))

          # If no files found
          if [ ${#files[@]} -eq 0 ]; then
            echo "‚ùå No cover files found!"
            exit 1
          fi

          # If shuffled list doesn't exist OR is empty ‚Üí make new shuffle
          if [ ! -f .cover_queue ] || [ ! -s .cover_queue ]; then
            echo "‚ôªÔ∏è Creating a new shuffled list"
            printf "%s\n" "${files[@]}" | shuf > .cover_queue
          fi

          # Pick first line as current file
          random_file=$(head -n 1 .cover_queue)
          # Remove first line from queue
          tail -n +2 .cover_queue > .cover_queue.tmp && mv .cover_queue.tmp .cover_queue

          echo "‚úÖ Selected: $random_file"
          echo "file=$random_file" >> $GITHUB_OUTPUT

      - name: Update README
        run: |
          random_file="${{ steps.random.outputs.file }}"
          # Replace line containing "![Cover](" with new image path
          sed -i "s|!\[Cover\](.*)|![Cover]($random_file)|" README.md

      - name: Commit and Push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md .cover_queue
          git commit -m "üîÑ Update random cover [skip ci]" || echo "‚ö†Ô∏è No changes"
          git push
